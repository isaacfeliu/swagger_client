=begin
#SEUR Public API

#<b>INFORMATION ABOUT THE API</b>  <b>AUTH</b>  All requests must be accompanied by an authentication header with a 'Bearer ' obtained through the SSO token URL:  https://servicios.apipre.seur.io/pic_token  <i>Simple cURL Example</i>  curl -X POST --data-urlencode \"grant_type=client_credentials\" --data-urlencode \"client_id=<>\" --data-urlencode \"client_secret=<>\" https://servicios.apipre.seur.io/pic_token

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.39

=end

require 'uri'

module SwaggerClient
  class CustomsServicesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Customs services
    # Customs services by originDepot, destinationDepot, serviceCode, shipmentType, shipmentWeight and shipmentValue 
    # @param authorization Bearer token obtained from SSO
    # @param origin_depot Origin Depot. Example: \&quot;47\&quot;
    # @param destination_depot Destination Depot. Example: \&quot;52\&quot;
    # @param [Hash] opts the optional parameters
    # @option opts [String] :service_code Service Code. Example: \&quot;1\&quot;
    # @option opts [String] :shipment_type shipment Type. Example: \&quot;D\&quot;
    # @option opts [String] :shipment_weight Shipment Weight. Example: \&quot;16\&quot;
    # @option opts [String] :shipment_value Shipment Value. Example: \&quot;160
    # @return [CustomsResponse]
    def pic_v1_customs_get(authorization, origin_depot, destination_depot, opts = {})
      data, _status_code, _headers = pic_v1_customs_get_with_http_info(authorization, origin_depot, destination_depot, opts)
      data
    end

    # Customs services
    # Customs services by originDepot, destinationDepot, serviceCode, shipmentType, shipmentWeight and shipmentValue 
    # @param authorization Bearer token obtained from SSO
    # @param origin_depot Origin Depot. Example: \&quot;47\&quot;
    # @param destination_depot Destination Depot. Example: \&quot;52\&quot;
    # @param [Hash] opts the optional parameters
    # @option opts [String] :service_code Service Code. Example: \&quot;1\&quot;
    # @option opts [String] :shipment_type shipment Type. Example: \&quot;D\&quot;
    # @option opts [String] :shipment_weight Shipment Weight. Example: \&quot;16\&quot;
    # @option opts [String] :shipment_value Shipment Value. Example: \&quot;160
    # @return [Array<(CustomsResponse, Fixnum, Hash)>] CustomsResponse data, response status code and response headers
    def pic_v1_customs_get_with_http_info(authorization, origin_depot, destination_depot, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomsServicesApi.pic_v1_customs_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CustomsServicesApi.pic_v1_customs_get"
      end
      # verify the required parameter 'origin_depot' is set
      if @api_client.config.client_side_validation && origin_depot.nil?
        fail ArgumentError, "Missing the required parameter 'origin_depot' when calling CustomsServicesApi.pic_v1_customs_get"
      end
      # verify the required parameter 'destination_depot' is set
      if @api_client.config.client_side_validation && destination_depot.nil?
        fail ArgumentError, "Missing the required parameter 'destination_depot' when calling CustomsServicesApi.pic_v1_customs_get"
      end
      # resource path
      local_var_path = '/pic/v1/customs'

      # query parameters
      query_params = {}
      query_params[:'originDepot'] = origin_depot
      query_params[:'destinationDepot'] = destination_depot
      query_params[:'serviceCode'] = opts[:'service_code'] if !opts[:'service_code'].nil?
      query_params[:'shipmentType'] = opts[:'shipment_type'] if !opts[:'shipment_type'].nil?
      query_params[:'shipmentWeight'] = opts[:'shipment_weight'] if !opts[:'shipment_weight'].nil?
      query_params[:'shipmentValue'] = opts[:'shipment_value'] if !opts[:'shipment_value'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8', 'text/plain;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=UTF-8'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CustomsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomsServicesApi#pic_v1_customs_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
