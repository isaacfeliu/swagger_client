=begin
#SEUR Public API

#<b>INFORMATION ABOUT THE API</b>  <b>AUTH</b>  All requests must be accompanied by an authentication header with a 'Bearer ' obtained through the SSO token URL:  https://servicios.apipre.seur.io/pic_token  <i>Simple cURL Example</i>  curl -X POST --data-urlencode \"grant_type=client_credentials\" --data-urlencode \"client_id=<>\" --data-urlencode \"client_secret=<>\" https://servicios.apipre.seur.io/pic_token

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.39

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ShipmentsServicesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ShipmentsServicesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ShipmentsServicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ShipmentsServicesApi' do
    it 'should create an instance of ShipmentsServicesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ShipmentsServicesApi)
    end
  end

  # unit tests for pic_v1_shipments_addpack_put
  # Add parcel to shipment
  # Add parcel to shipment
  # @param authorization Bearer token obtained from SSO
  # @param [Hash] opts the optional parameters
  # @option opts [AddPack] :input Parcel to add. In case shipmentCode is present it will ignore ccc, fracnhise, date and reference.
  # @return [ShipmentAddPackResponse]
  describe 'pic_v1_shipments_addpack_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pic_v1_shipments_cancel_post
  # Cancel existing shipment
  # Cancel existing shipment
  # @param authorization Bearer token obtained from SSO
  # @param [Hash] opts the optional parameters
  # @option opts [Codes] :codes Collection codes to cancel
  # @return [ShipmentCancelResponse]
  describe 'pic_v1_shipments_cancel_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pic_v1_shipments_deletepack_put
  # Delete parcel from shipment
  # Delete parcel from shipment
  # @param authorization Bearer token obtained from SSO
  # @param [Hash] opts the optional parameters
  # @option opts [DeletePack] :input Parcel to delete. In case shipmentCode is present it will ignore ccc, fracnhise, date and reference.
  # @return [ShipmentAddPackResponse]
  describe 'pic_v1_shipments_deletepack_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pic_v1_shipments_post
  # Create a new shipment
  # Create a new shipment
  # @param authorization Bearer token obtained from SSO
  # @param [Hash] opts the optional parameters
  # @option opts [ShipmentRequestBody] :input The pickup to create
  # @return [ShipmentResponse]
  describe 'pic_v1_shipments_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pic_v1_shipments_update_put
  # Update shipment
  # Update shipment
  # @param authorization Bearer token obtained from SSO
  # @param [Hash] opts the optional parameters
  # @option opts [EditRequest] :input New data for the expedition. ShipmentCode or shipmentFilter required but only one (XOR operator).
  # @return [EditResponse]
  describe 'pic_v1_shipments_update_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
