=begin
#SEUR Public API

#<b>INFORMATION ABOUT THE API</b>  <b>AUTH</b>  All requests must be accompanied by an authentication header with a 'Bearer ' obtained through the SSO token URL:  https://servicios.apipre.seur.io/pic_token  <i>Simple cURL Example</i>  curl -X POST --data-urlencode \"grant_type=client_credentials\" --data-urlencode \"client_id=<>\" --data-urlencode \"client_secret=<>\" https://servicios.apipre.seur.io/pic_token

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.39

=end

require 'uri'

module SwaggerClient
  class InflightOptionsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Inflight Options
    # Create a solution for a specific Solution Type from the provided values
    # @param authorization Bearer token obtained from SSO
    # @param observations Observations
    # @param solution_type Solution Type
    # @param [Hash] opts the optional parameters
    # @option opts [String] :expedition_code Expedition code
    # @option opts [String] :ref Reference
    # @option opts [String] :id_number Id Number
    # @option opts [String] :date Date on format: &#39;yyyy-MM-dd&#39;
    # @option opts [Integer] :center_code Center code
    # @option opts [String] :country_iso_code Country ISO Code
    # @option opts [String] :city_name City Name
    # @option opts [String] :street_type_code Street Type Code
    # @option opts [String] :street_name Street Name
    # @option opts [String] :postal_code Postal Code
    # @option opts [Integer] :city_code City Code
    # @option opts [String] :street_number_type_code Street Type Code
    # @option opts [String] :street_number Street Number
    # @option opts [String] :block block
    # @option opts [String] :floor floor
    # @option opts [String] :stairs stairs
    # @option opts [String] :door door
    # @option opts [String] :phone phone
    # @option opts [String] :name name
    # @option opts [String] :notification_mail Notificacion Mail
    # @option opts [Integer] :client_franchise Client Franchise
    # @option opts [String] :contact_person Contact Person
    # @option opts [String] :nif nif
    # @option opts [BOOLEAN] :sandbox sandbox (default to false)
    # @return [GenericCreateResponseDto]
    def pic_v1_inflight_options_get(authorization, observations, solution_type, opts = {})
      data, _status_code, _headers = pic_v1_inflight_options_get_with_http_info(authorization, observations, solution_type, opts)
      data
    end

    # Inflight Options
    # Create a solution for a specific Solution Type from the provided values
    # @param authorization Bearer token obtained from SSO
    # @param observations Observations
    # @param solution_type Solution Type
    # @param [Hash] opts the optional parameters
    # @option opts [String] :expedition_code Expedition code
    # @option opts [String] :ref Reference
    # @option opts [String] :id_number Id Number
    # @option opts [String] :date Date on format: &#39;yyyy-MM-dd&#39;
    # @option opts [Integer] :center_code Center code
    # @option opts [String] :country_iso_code Country ISO Code
    # @option opts [String] :city_name City Name
    # @option opts [String] :street_type_code Street Type Code
    # @option opts [String] :street_name Street Name
    # @option opts [String] :postal_code Postal Code
    # @option opts [Integer] :city_code City Code
    # @option opts [String] :street_number_type_code Street Type Code
    # @option opts [String] :street_number Street Number
    # @option opts [String] :block block
    # @option opts [String] :floor floor
    # @option opts [String] :stairs stairs
    # @option opts [String] :door door
    # @option opts [String] :phone phone
    # @option opts [String] :name name
    # @option opts [String] :notification_mail Notificacion Mail
    # @option opts [Integer] :client_franchise Client Franchise
    # @option opts [String] :contact_person Contact Person
    # @option opts [String] :nif nif
    # @option opts [BOOLEAN] :sandbox sandbox
    # @return [Array<(GenericCreateResponseDto, Fixnum, Hash)>] GenericCreateResponseDto data, response status code and response headers
    def pic_v1_inflight_options_get_with_http_info(authorization, observations, solution_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InflightOptionsApi.pic_v1_inflight_options_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling InflightOptionsApi.pic_v1_inflight_options_get"
      end
      # verify the required parameter 'observations' is set
      if @api_client.config.client_side_validation && observations.nil?
        fail ArgumentError, "Missing the required parameter 'observations' when calling InflightOptionsApi.pic_v1_inflight_options_get"
      end
      # verify the required parameter 'solution_type' is set
      if @api_client.config.client_side_validation && solution_type.nil?
        fail ArgumentError, "Missing the required parameter 'solution_type' when calling InflightOptionsApi.pic_v1_inflight_options_get"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['J100', 'J105', 'J300', 'J517', 'J524'].include?(solution_type)
        fail ArgumentError, "invalid value for 'solution_type', must be one of J100, J105, J300, J517, J524"
      end
      if @api_client.config.client_side_validation && !opts[:'street_number'].nil? && opts[:'street_number'] > 5
        fail ArgumentError, 'invalid value for "opts[:"street_number"]" when calling InflightOptionsApi.pic_v1_inflight_options_get, must be smaller than or equal to 5.'
      end

      # resource path
      local_var_path = '/pic/v1/inflight-options'

      # query parameters
      query_params = {}
      query_params[:'observations'] = observations
      query_params[:'solutionType'] = solution_type
      query_params[:'expeditionCode'] = opts[:'expedition_code'] if !opts[:'expedition_code'].nil?
      query_params[:'ref'] = opts[:'ref'] if !opts[:'ref'].nil?
      query_params[:'idNumber'] = opts[:'id_number'] if !opts[:'id_number'].nil?
      query_params[:'date'] = opts[:'date'] if !opts[:'date'].nil?
      query_params[:'centerCode'] = opts[:'center_code'] if !opts[:'center_code'].nil?
      query_params[:'countryIsoCode'] = opts[:'country_iso_code'] if !opts[:'country_iso_code'].nil?
      query_params[:'cityName'] = opts[:'city_name'] if !opts[:'city_name'].nil?
      query_params[:'streetTypeCode'] = opts[:'street_type_code'] if !opts[:'street_type_code'].nil?
      query_params[:'streetName'] = opts[:'street_name'] if !opts[:'street_name'].nil?
      query_params[:'postalCode'] = opts[:'postal_code'] if !opts[:'postal_code'].nil?
      query_params[:'cityCode'] = opts[:'city_code'] if !opts[:'city_code'].nil?
      query_params[:'streetNumberTypeCode'] = opts[:'street_number_type_code'] if !opts[:'street_number_type_code'].nil?
      query_params[:'streetNumber'] = opts[:'street_number'] if !opts[:'street_number'].nil?
      query_params[:'block'] = opts[:'block'] if !opts[:'block'].nil?
      query_params[:'floor'] = opts[:'floor'] if !opts[:'floor'].nil?
      query_params[:'stairs'] = opts[:'stairs'] if !opts[:'stairs'].nil?
      query_params[:'door'] = opts[:'door'] if !opts[:'door'].nil?
      query_params[:'phone'] = opts[:'phone'] if !opts[:'phone'].nil?
      query_params[:'name'] = opts[:'name'] if !opts[:'name'].nil?
      query_params[:'notificationMail'] = opts[:'notification_mail'] if !opts[:'notification_mail'].nil?
      query_params[:'clientFranchise'] = opts[:'client_franchise'] if !opts[:'client_franchise'].nil?
      query_params[:'contactPerson'] = opts[:'contact_person'] if !opts[:'contact_person'].nil?
      query_params[:'nif'] = opts[:'nif'] if !opts[:'nif'].nil?
      query_params[:'sandbox'] = opts[:'sandbox'] if !opts[:'sandbox'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GenericCreateResponseDto')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InflightOptionsApi#pic_v1_inflight_options_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
