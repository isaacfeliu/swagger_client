=begin
#SEUR Public API

#<b>INFORMATION ABOUT THE API</b>  <b>AUTH</b>  All requests must be accompanied by an authentication header with a 'Bearer ' obtained through the SSO token URL:  https://servicios.apipre.seur.io/pic_token  <i>Simple cURL Example</i>  curl -X POST --data-urlencode \"grant_type=client_credentials\" --data-urlencode \"client_id=<>\" --data-urlencode \"client_secret=<>\" https://servicios.apipre.seur.io/pic_token

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.39

=end

require 'uri'

module SwaggerClient
  class InternationalServicesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get output platform
    # Get output Platform.
    # @param authorization Bearer token obtained from SSO
    # @param product_code Product
    # @param service_code Service
    # @param origin_depot Unity admin origin
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :destination_partner Destination agent
    # @option opts [Integer] :seur_center_id Seur center
    # @option opts [String] :customer_id Client
    # @option opts [String] :country_iso_code Country
    # @option opts [String] :postal_code Postal code
    # @option opts [Integer] :int_product_code International product
    # @option opts [Integer] :int_service_code International service
    # @option opts [String] :shipment_type Shipping type
    # @option opts [String] :city_name city name
    # @return [OutputPlatformResponse]
    def pic_v1_output_platform_get(authorization, product_code, service_code, origin_depot, opts = {})
      data, _status_code, _headers = pic_v1_output_platform_get_with_http_info(authorization, product_code, service_code, origin_depot, opts)
      data
    end

    # Get output platform
    # Get output Platform.
    # @param authorization Bearer token obtained from SSO
    # @param product_code Product
    # @param service_code Service
    # @param origin_depot Unity admin origin
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :destination_partner Destination agent
    # @option opts [Integer] :seur_center_id Seur center
    # @option opts [String] :customer_id Client
    # @option opts [String] :country_iso_code Country
    # @option opts [String] :postal_code Postal code
    # @option opts [Integer] :int_product_code International product
    # @option opts [Integer] :int_service_code International service
    # @option opts [String] :shipment_type Shipping type
    # @option opts [String] :city_name city name
    # @return [Array<(OutputPlatformResponse, Fixnum, Hash)>] OutputPlatformResponse data, response status code and response headers
    def pic_v1_output_platform_get_with_http_info(authorization, product_code, service_code, origin_depot, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InternationalServicesApi.pic_v1_output_platform_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling InternationalServicesApi.pic_v1_output_platform_get"
      end
      # verify the required parameter 'product_code' is set
      if @api_client.config.client_side_validation && product_code.nil?
        fail ArgumentError, "Missing the required parameter 'product_code' when calling InternationalServicesApi.pic_v1_output_platform_get"
      end
      # verify the required parameter 'service_code' is set
      if @api_client.config.client_side_validation && service_code.nil?
        fail ArgumentError, "Missing the required parameter 'service_code' when calling InternationalServicesApi.pic_v1_output_platform_get"
      end
      # verify the required parameter 'origin_depot' is set
      if @api_client.config.client_side_validation && origin_depot.nil?
        fail ArgumentError, "Missing the required parameter 'origin_depot' when calling InternationalServicesApi.pic_v1_output_platform_get"
      end
      # resource path
      local_var_path = '/pic/v1/output-platform'

      # query parameters
      query_params = {}
      query_params[:'productCode'] = product_code
      query_params[:'serviceCode'] = service_code
      query_params[:'originDepot'] = origin_depot
      query_params[:'destinationPartner'] = opts[:'destination_partner'] if !opts[:'destination_partner'].nil?
      query_params[:'seurCenterId'] = opts[:'seur_center_id'] if !opts[:'seur_center_id'].nil?
      query_params[:'customerId'] = opts[:'customer_id'] if !opts[:'customer_id'].nil?
      query_params[:'countryISOCode'] = opts[:'country_iso_code'] if !opts[:'country_iso_code'].nil?
      query_params[:'postalCode'] = opts[:'postal_code'] if !opts[:'postal_code'].nil?
      query_params[:'intProductCode'] = opts[:'int_product_code'] if !opts[:'int_product_code'].nil?
      query_params[:'intServiceCode'] = opts[:'int_service_code'] if !opts[:'int_service_code'].nil?
      query_params[:'shipmentType'] = opts[:'shipment_type'] if !opts[:'shipment_type'].nil?
      query_params[:'cityName'] = opts[:'city_name'] if !opts[:'city_name'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OutputPlatformResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InternationalServicesApi#pic_v1_output_platform_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Calculate routing Operative Zones
    # Calculate routing operative zones.
    # @param authorization Bearer token obtained from SSO
    # @param input Operating areas
    # @param [Hash] opts the optional parameters
    # @return [RoutingOZResponse]
    def pic_v1_routing_oz_post(authorization, input, opts = {})
      data, _status_code, _headers = pic_v1_routing_oz_post_with_http_info(authorization, input, opts)
      data
    end

    # Calculate routing Operative Zones
    # Calculate routing operative zones.
    # @param authorization Bearer token obtained from SSO
    # @param input Operating areas
    # @param [Hash] opts the optional parameters
    # @return [Array<(RoutingOZResponse, Fixnum, Hash)>] RoutingOZResponse data, response status code and response headers
    def pic_v1_routing_oz_post_with_http_info(authorization, input, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InternationalServicesApi.pic_v1_routing_oz_post ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling InternationalServicesApi.pic_v1_routing_oz_post"
      end
      # verify the required parameter 'input' is set
      if @api_client.config.client_side_validation && input.nil?
        fail ArgumentError, "Missing the required parameter 'input' when calling InternationalServicesApi.pic_v1_routing_oz_post"
      end
      # resource path
      local_var_path = '/pic/v1/routing-oz'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=UTF-8'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(input)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RoutingOZResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InternationalServicesApi#pic_v1_routing_oz_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
