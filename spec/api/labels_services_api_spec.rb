=begin
#SEUR Public API

#<b>INFORMATION ABOUT THE API</b>  <b>AUTH</b>  All requests must be accompanied by an authentication header with a 'Bearer ' obtained through the SSO token URL:  https://servicios.apipre.seur.io/pic_token  <i>Simple cURL Example</i>  curl -X POST --data-urlencode \"grant_type=client_credentials\" --data-urlencode \"client_id=<>\" --data-urlencode \"client_secret=<>\" https://servicios.apipre.seur.io/pic_token

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.39

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::LabelsServicesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LabelsServicesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::LabelsServicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LabelsServicesApi' do
    it 'should create an instance of LabelsServicesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::LabelsServicesApi)
    end
  end

  # unit tests for pic_v1_labels_get
  # Labels expedition label
  # Labels expedition label
  # @param authorization Bearer token obtained from SSO
  # @param code Code. Example: 0000000000000001
  # @param type Label type. Example: ZPL | PDF | A4_3
  # @param entity Entity type. Example: EXPEDITIONS | SHIPMENTS | COLLECTIONS
  # @param [Hash] opts the optional parameters
  # @option opts [String] :template_type Template type. Example: NORMAL | CUSTOM_REFERENCE | Z4_ONE_BODY | Z4_TWO_BODIES | GEOLABEL | C2C
  # @option opts [Array<String>] :packs List of specific ecb numbers that belongs to the informed code
  # @option opts [String] :output_type Label output type, by default is LABEL. Example: LABEL | LINK | LABEL_AND_LINK
  # @option opts [BOOLEAN] :qr Specify whether QR code is required
  # @option opts [BOOLEAN] :qr_ref Specify whether QR reference is required
  # @option opts [Integer] :start_parcel In case of TWO_BODIES-A4_3 label specify the start pack label, by default is 1 (The first label)
  # @option opts [Integer] :end_parcel In case of TWO_BODIES-A4_3 label specify the end pack label, by default is 0 (0 means that you get have no limit)
  # @option opts [Integer] :position Vales [1-2-3]. In case of TWO_BODIES-A4_3 specifiy the position of the first label start on first page, by default is 1
  # @return [LabelsResponse]
  describe 'pic_v1_labels_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
