=begin
#SEUR Public API

#<b>INFORMATION ABOUT THE API</b>  <b>AUTH</b>  All requests must be accompanied by an authentication header with a 'Bearer ' obtained through the SSO token URL:  https://servicios.apipre.seur.io/pic_token  <i>Simple cURL Example</i>  curl -X POST --data-urlencode \"grant_type=client_credentials\" --data-urlencode \"client_id=<>\" --data-urlencode \"client_secret=<>\" https://servicios.apipre.seur.io/pic_token

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.39

=end

require 'uri'

module SwaggerClient
  class LabelsServicesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Labels expedition label
    # Labels expedition label
    # @param authorization Bearer token obtained from SSO
    # @param code Code. Example: 0000000000000001
    # @param type Label type. Example: ZPL | PDF | A4_3
    # @param entity Entity type. Example: EXPEDITIONS | SHIPMENTS | COLLECTIONS
    # @param [Hash] opts the optional parameters
    # @option opts [String] :template_type Template type. Example: NORMAL | CUSTOM_REFERENCE | Z4_ONE_BODY | Z4_TWO_BODIES | GEOLABEL | C2C
    # @option opts [Array<String>] :packs List of specific ecb numbers that belongs to the informed code
    # @option opts [String] :output_type Label output type, by default is LABEL. Example: LABEL | LINK | LABEL_AND_LINK
    # @option opts [BOOLEAN] :qr Specify whether QR code is required
    # @option opts [BOOLEAN] :qr_ref Specify whether QR reference is required
    # @option opts [Integer] :start_parcel In case of TWO_BODIES-A4_3 label specify the start pack label, by default is 1 (The first label)
    # @option opts [Integer] :end_parcel In case of TWO_BODIES-A4_3 label specify the end pack label, by default is 0 (0 means that you get have no limit)
    # @option opts [Integer] :position Vales [1-2-3]. In case of TWO_BODIES-A4_3 specifiy the position of the first label start on first page, by default is 1
    # @return [LabelsResponse]
    def pic_v1_labels_get(authorization, code, type, entity, opts = {})
      data, _status_code, _headers = pic_v1_labels_get_with_http_info(authorization, code, type, entity, opts)
      data
    end

    # Labels expedition label
    # Labels expedition label
    # @param authorization Bearer token obtained from SSO
    # @param code Code. Example: 0000000000000001
    # @param type Label type. Example: ZPL | PDF | A4_3
    # @param entity Entity type. Example: EXPEDITIONS | SHIPMENTS | COLLECTIONS
    # @param [Hash] opts the optional parameters
    # @option opts [String] :template_type Template type. Example: NORMAL | CUSTOM_REFERENCE | Z4_ONE_BODY | Z4_TWO_BODIES | GEOLABEL | C2C
    # @option opts [Array<String>] :packs List of specific ecb numbers that belongs to the informed code
    # @option opts [String] :output_type Label output type, by default is LABEL. Example: LABEL | LINK | LABEL_AND_LINK
    # @option opts [BOOLEAN] :qr Specify whether QR code is required
    # @option opts [BOOLEAN] :qr_ref Specify whether QR reference is required
    # @option opts [Integer] :start_parcel In case of TWO_BODIES-A4_3 label specify the start pack label, by default is 1 (The first label)
    # @option opts [Integer] :end_parcel In case of TWO_BODIES-A4_3 label specify the end pack label, by default is 0 (0 means that you get have no limit)
    # @option opts [Integer] :position Vales [1-2-3]. In case of TWO_BODIES-A4_3 specifiy the position of the first label start on first page, by default is 1
    # @return [Array<(LabelsResponse, Fixnum, Hash)>] LabelsResponse data, response status code and response headers
    def pic_v1_labels_get_with_http_info(authorization, code, type, entity, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LabelsServicesApi.pic_v1_labels_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling LabelsServicesApi.pic_v1_labels_get"
      end
      # verify the required parameter 'code' is set
      if @api_client.config.client_side_validation && code.nil?
        fail ArgumentError, "Missing the required parameter 'code' when calling LabelsServicesApi.pic_v1_labels_get"
      end
      # verify the required parameter 'type' is set
      if @api_client.config.client_side_validation && type.nil?
        fail ArgumentError, "Missing the required parameter 'type' when calling LabelsServicesApi.pic_v1_labels_get"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['ZPL', 'PDF', 'A4_3'].include?(type)
        fail ArgumentError, "invalid value for 'type', must be one of ZPL, PDF, A4_3"
      end
      # verify the required parameter 'entity' is set
      if @api_client.config.client_side_validation && entity.nil?
        fail ArgumentError, "Missing the required parameter 'entity' when calling LabelsServicesApi.pic_v1_labels_get"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['EXPEDITIONS', 'COLLECTIONS', 'SHIPMENTS'].include?(entity)
        fail ArgumentError, "invalid value for 'entity', must be one of EXPEDITIONS, COLLECTIONS, SHIPMENTS"
      end
      if @api_client.config.client_side_validation && opts[:'template_type'] && !['NORMAL', 'CUSTOM_REFERENCE', 'Z4_ONE_BODY', 'Z4_TWO_BODIES', 'GEOLABEL', 'C2C'].include?(opts[:'template_type'])
        fail ArgumentError, 'invalid value for "template_type", must be one of NORMAL, CUSTOM_REFERENCE, Z4_ONE_BODY, Z4_TWO_BODIES, GEOLABEL, C2C'
      end
      if @api_client.config.client_side_validation && opts[:'output_type'] && !['LABEL', 'LINK', 'LABEL_AND_LINK'].include?(opts[:'output_type'])
        fail ArgumentError, 'invalid value for "output_type", must be one of LABEL, LINK, LABEL_AND_LINK'
      end
      if @api_client.config.client_side_validation && !opts[:'position'].nil? && opts[:'position'] > 3
        fail ArgumentError, 'invalid value for "opts[:"position"]" when calling LabelsServicesApi.pic_v1_labels_get, must be smaller than or equal to 3.'
      end

      if @api_client.config.client_side_validation && !opts[:'position'].nil? && opts[:'position'] < 1
        fail ArgumentError, 'invalid value for "opts[:"position"]" when calling LabelsServicesApi.pic_v1_labels_get, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/pic/v1/labels'

      # query parameters
      query_params = {}
      query_params[:'code'] = @api_client.build_collection_param(code, :multi)
      query_params[:'type'] = type
      query_params[:'entity'] = entity
      query_params[:'templateType'] = opts[:'template_type'] if !opts[:'template_type'].nil?
      query_params[:'packs'] = @api_client.build_collection_param(opts[:'packs'], :multi) if !opts[:'packs'].nil?
      query_params[:'outputType'] = opts[:'output_type'] if !opts[:'output_type'].nil?
      query_params[:'qr'] = opts[:'qr'] if !opts[:'qr'].nil?
      query_params[:'qrRef'] = opts[:'qr_ref'] if !opts[:'qr_ref'].nil?
      query_params[:'startParcel'] = opts[:'start_parcel'] if !opts[:'start_parcel'].nil?
      query_params[:'endParcel'] = opts[:'end_parcel'] if !opts[:'end_parcel'].nil?
      query_params[:'position'] = opts[:'position'] if !opts[:'position'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=UTF-8'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'LabelsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LabelsServicesApi#pic_v1_labels_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
