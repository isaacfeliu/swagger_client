=begin
#SEUR Public API

#<b>INFORMATION ABOUT THE API</b>  <b>AUTH</b>  All requests must be accompanied by an authentication header with a 'Bearer ' obtained through the SSO token URL:  https://servicios.apipre.seur.io/pic_token  <i>Simple cURL Example</i>  curl -X POST --data-urlencode \"grant_type=client_credentials\" --data-urlencode \"client_id=<>\" --data-urlencode \"client_secret=<>\" https://servicios.apipre.seur.io/pic_token

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.39

=end

require 'uri'

module SwaggerClient
  class BrexitServicesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Invoices
    # Invoices
    # @param authorization Bearer token obtained from SSO
    # @param file Invoice to save.
    # @param ref Reference code. Example: 866075/4SHZQ6YLMEJ7BF
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :business_unit Business Unit code: Example: 80
    # @option opts [Integer] :account_number Account Number. Example: 20855
    # @option opts [BOOLEAN] :sandbox enables sandbox mode (default to false)
    # @return [InvoiceResponse]
    def pic_v1_brexit_invoices_post(authorization, file, ref, opts = {})
      data, _status_code, _headers = pic_v1_brexit_invoices_post_with_http_info(authorization, file, ref, opts)
      data
    end

    # Invoices
    # Invoices
    # @param authorization Bearer token obtained from SSO
    # @param file Invoice to save.
    # @param ref Reference code. Example: 866075/4SHZQ6YLMEJ7BF
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :business_unit Business Unit code: Example: 80
    # @option opts [Integer] :account_number Account Number. Example: 20855
    # @option opts [BOOLEAN] :sandbox enables sandbox mode
    # @return [Array<(InvoiceResponse, Fixnum, Hash)>] InvoiceResponse data, response status code and response headers
    def pic_v1_brexit_invoices_post_with_http_info(authorization, file, ref, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BrexitServicesApi.pic_v1_brexit_invoices_post ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling BrexitServicesApi.pic_v1_brexit_invoices_post"
      end
      # verify the required parameter 'file' is set
      if @api_client.config.client_side_validation && file.nil?
        fail ArgumentError, "Missing the required parameter 'file' when calling BrexitServicesApi.pic_v1_brexit_invoices_post"
      end
      # verify the required parameter 'ref' is set
      if @api_client.config.client_side_validation && ref.nil?
        fail ArgumentError, "Missing the required parameter 'ref' when calling BrexitServicesApi.pic_v1_brexit_invoices_post"
      end
      if @api_client.config.client_side_validation && ref.to_s.length > 50
        fail ArgumentError, 'invalid value for "ref" when calling BrexitServicesApi.pic_v1_brexit_invoices_post, the character length must be smaller than or equal to 50.'
      end

      if @api_client.config.client_side_validation && !opts[:'business_unit'].nil? && opts[:'business_unit'] > 999
        fail ArgumentError, 'invalid value for "opts[:"business_unit"]" when calling BrexitServicesApi.pic_v1_brexit_invoices_post, must be smaller than or equal to 999.'
      end

      if @api_client.config.client_side_validation && !opts[:'account_number'].nil? && opts[:'account_number'] > 9999999
        fail ArgumentError, 'invalid value for "opts[:"account_number"]" when calling BrexitServicesApi.pic_v1_brexit_invoices_post, must be smaller than or equal to 9999999.'
      end

      # resource path
      local_var_path = '/pic/v1/brexit/invoices'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['multipart/form-data'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}
      form_params['file'] = file
      form_params['ref'] = ref
      form_params['businessUnit'] = opts[:'business_unit'] if !opts[:'business_unit'].nil?
      form_params['accountNumber'] = opts[:'account_number'] if !opts[:'account_number'].nil?
      form_params['sandbox'] = opts[:'sandbox'] if !opts[:'sandbox'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InvoiceResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BrexitServicesApi#pic_v1_brexit_invoices_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Tariff Items
    # Tariff Items
    # @param authorization Bearer token obtained from SSO
    # @param input Tariff Item
    # @param [Hash] opts the optional parameters
    # @return [TariffItemResponse]
    def pic_v1_brexit_tariff_item_post(authorization, input, opts = {})
      data, _status_code, _headers = pic_v1_brexit_tariff_item_post_with_http_info(authorization, input, opts)
      data
    end

    # Tariff Items
    # Tariff Items
    # @param authorization Bearer token obtained from SSO
    # @param input Tariff Item
    # @param [Hash] opts the optional parameters
    # @return [Array<(TariffItemResponse, Fixnum, Hash)>] TariffItemResponse data, response status code and response headers
    def pic_v1_brexit_tariff_item_post_with_http_info(authorization, input, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BrexitServicesApi.pic_v1_brexit_tariff_item_post ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling BrexitServicesApi.pic_v1_brexit_tariff_item_post"
      end
      # verify the required parameter 'input' is set
      if @api_client.config.client_side_validation && input.nil?
        fail ArgumentError, "Missing the required parameter 'input' when calling BrexitServicesApi.pic_v1_brexit_tariff_item_post"
      end
      # resource path
      local_var_path = '/pic/v1/brexit/tariff-item'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=UTF-8'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(input)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TariffItemResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BrexitServicesApi#pic_v1_brexit_tariff_item_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
