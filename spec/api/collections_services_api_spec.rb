=begin
#SEUR Public API

#<b>INFORMATION ABOUT THE API</b>  <b>AUTH</b>  All requests must be accompanied by an authentication header with a 'Bearer ' obtained through the SSO token URL:  https://servicios.apipre.seur.io/pic_token  <i>Simple cURL Example</i>  curl -X POST --data-urlencode \"grant_type=client_credentials\" --data-urlencode \"client_id=<>\" --data-urlencode \"client_secret=<>\" https://servicios.apipre.seur.io/pic_token

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.39

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CollectionsServicesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CollectionsServicesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CollectionsServicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CollectionsServicesApi' do
    it 'should create an instance of CollectionsServicesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CollectionsServicesApi)
    end
  end

  # unit tests for pic_v1_collections_cancel_post
  # Cancel existing collection
  # Cancel existing collection
  # @param authorization Bearer token obtained from SSO
  # @param [Hash] opts the optional parameters
  # @option opts [Collection] :collection Collection codes to cancel
  # @return [CollectionCancelResponse]
  describe 'pic_v1_collections_cancel_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pic_v1_collections_post
  # Create a new collection
  # Create a new collection: The customer can only create pickups for the ccc it has access
  # @param authorization Bearer token obtained from SSO
  # @param [Hash] opts the optional parameters
  # @option opts [CollectionRequestBody] :input The pickup to create
  # @return [CollectionResponse]
  describe 'pic_v1_collections_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pic_v1_collections_time_slots_get
  # Get time-slot from collection
  # Get time slots
  # @param authorization Bearer token obtained from SSO
  # @param origin_city_code Origin City Code. Example: 480001
  # @param product_code Product Code. Example: 2
  # @param service_code Service Code. Example: 1
  # @param origin_business_unit Origin Business Unit. Example: 48
  # @param postal_code Postal Code. Example: 47010
  # @param [Hash] opts the optional parameters
  # @option opts [String] :current_system_date Current System Date. Example: \&quot;2020-09-17\&quot;
  # @option opts [String] :requested_date Requested date. Example: 2020-09-20
  # @option opts [String] :destination_business_unit Destination Business Unit. Example: 28
  # @option opts [String] :destination_city_code Destination City Code. Example: 28
  # @option opts [String] :current_system_time Current System Time. Example: 12:30
  # @return [TimeSlotResponse]
  describe 'pic_v1_collections_time_slots_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
